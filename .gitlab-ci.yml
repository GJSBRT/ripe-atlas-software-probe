stages:
  - docker_image
  - build
  - prepare
  # - deploy

variables:
  # DOCKER_IMAGE_DEBIAN9: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian9:${CI_COMMIT_REF_SLUG}
  # DOCKER_IMAGE_DEBIAN10: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian10:${CI_COMMIT_REF_SLUG}
  # DOCKER_IMAGE_DEBIAN11: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian11:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_CENTOS7: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/centos7:${CI_COMMIT_REF_SLUG}
  # DOCKER_IMAGE_CENTOS8: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/centos8:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_PREP: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/prep:${CI_COMMIT_REF_SLUG}
  GIT_SUBMODULE_STRATEGY: recursive
  RPMS_DIR: rpmbuild/RPMS

.build_image_debian:
  stage: docker_image
  only:
    refs:
      - /^devel.*/
      - tags
    changes:
     #  - .gitlab-ci.yml
      - ${DOCKER_DIR}/Dockerfile
  image: docker:latest
  script:
    - echo DOCKER_IMAGE ${DOCKER_IMAGE}
    - echo DOCKER_DIR ${DOCKER_DIR}
    - docker build -t ${DOCKER_IMAGE} ${DOCKER_DIR}
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker push ${DOCKER_IMAGE}

# build_image_debian9:
#   variables:
#     DOCKER_DIR: build-config/gitlab-docker/debian9
#     DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN9}
#   extends: .build_image_debian

# build_image_debian10:
#   variables:
#     DOCKER_DIR: build-config/gitlab-docker/debian10
#     DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN10}
#   extends: .build_image_debian

# build_image_debian11:
#   variables:
#     DOCKER_DIR: build-config/gitlab-docker/debian11
#     DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN11}
#   extends: .build_image_debian

# .build_image_centos:
#   stage: docker_image
#   only:
#     refs:
#       - /^devel.*/
#       - tags
#     changes:
#       # - .gitlab-ci.yml
#       - ${DOCKER_DIR}/Dockerfile
#   image: docker:latest
#   script:
#     - docker build -t ${DOCKER_IMAGE} ${DOCKER_DIR}
#     - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
#     - docker push ${DOCKER_IMAGE}

# build_image_centos7:
#   variables:
#     DOCKER_DIR: build-config/gitlab-docker/centos7
#     DOCKER_IMAGE: ${DOCKER_IMAGE_CENTOS7}
#   extends: .build_image_centos

# build_image_centos8:
#   variables:
#     DOCKER_DIR: build-config/gitlab-docker/centos8
#     DOCKER_IMAGE: ${DOCKER_IMAGE_CENTOS8}
#   extends: .build_image_centos

build-prep:
  variables:
    DOCKER_DIR: build-config/gitlab-docker/prep
    DOCKER_IMAGE: ${DOCKER_IMAGE_PREP}
  extends: .build_image_debian

# .build-ci-test-debian:
#   stage: build
#   only:
#     - /^devel.*/
#     - tags
#   script:
#     - cd ..
#     - HOME=${PWD} ripe-atlas-software-probe/build-config/debian/bin/make-deb
#     - cp atlasswprobe-*.deb ripe-atlas-software-probe
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}"
#     paths:
#       - atlasswprobe-*.deb

# build-ci-test-debian9:
#   extends: .build-ci-test-debian
#   image: ${DOCKER_IMAGE_DEBIAN9}

# build-ci-test-debian10:
#   extends: .build-ci-test-debian
#   image: ${DOCKER_IMAGE_DEBIAN10}

# build-ci-test-debian11:
#   extends: .build-ci-test-debian
#   image: ${DOCKER_IMAGE_DEBIAN11}

.build-ci-test-centos:
  stage: build
  only:
    - /^devel.*/
    - tags
  script:
    - set
    - cd ..
    - ripe-atlas-software-probe/build-config/centos/bin/cp-repo-files ${CENTOS_VERSION}
    - HOME=${PWD} ripe-atlas-software-probe/build-config/centos/bin/make-tars

    - HOME=${PWD} rpmbuild --bb rpmbuild/SPECS/ripe-atlas-repo.spec
    - HOME=${PWD} rpmbuild --bb rpmbuild/SPECS/atlasswprobe.spec

    - cp ${RPMS_DIR}/x86_64/atlasswprobe-*.rpm ripe-atlas-software-probe
    - cp ${RPMS_DIR}/noarch/ripe-atlas-repo-*.rpm ripe-atlas-software-probe
    - tar cvf ${CENTOS_VERSION}-RPM-package.tar ${RPMS_DIR}/

    - cp ${CENTOS_VERSION}-RPM-package.tar ${CI_PROJECT_DIR}/   # hack for gitlab artifacts relative paths
    - cd ${CI_PROJECT_DIR}
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}"
    paths:
      - ./*-RPM-package.tar

build-ci-test-centos7:
  variables:
    CENTOS_VERSION: centos7
  image: ${DOCKER_IMAGE_CENTOS7}
  extends: .build-ci-test-centos

# build-ci-test-centos8:
#   variables:
#     CENTOS_VERSION: centos8
#   image: ${DOCKER_IMAGE_CENTOS8}
#   extends: .build-ci-test-centos

.prepare-ci-centos:
  stage: prepare
  only:
    - /^devel.*/
    - tags
  before_script:
    - cd ${CI_PROJECT_DIR}
  script:
    - tar xvf ${CENTOS_VERSION}-RPM-package.tar -C ..
    - cd ..
    - find . | grep -vE '.git|probe-busybox|build-config|bin'

    - 'eval ${PREPARE}'
    - find . | grep -vE '.git|probe-busybox|build-config|bin'
    - 'eval ${FINALIZE}'
    - find . | grep -vE '.git|probe-busybox|build-config|bin'
    - 'eval ${CLEANUP}'
    - find . | grep -vE '.git|probe-busybox|build-config|bin'

    # generate artifacts for deploy - overwrite previous
    - tar cvf ${CENTOS_VERSION}-RPM-package.tar ${RPMS_DIR}/

    - cp ${CENTOS_VERSION}-RPM-package.tar ${CI_PROJECT_DIR}/   # hack for gitlab artifacts relative paths
    - cd ${CI_PROJECT_DIR}
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}-prepared"
    paths:
      - ./*-RPM-package.tar

prepare-centos7:
  dependencies:
    - build-ci-test-centos7
  variables:
    CENTOS_VERSION: centos7
  image: ${DOCKER_IMAGE_PREP}
  extends: .prepare-ci-centos

# .deploy-ci-centos:
#   stage: deploy
#   script:
#     - tar xvf ${CENTOS_VERSION}-RPM-package.tar

#     # prepare artifact dir
#     # - find . | grep -vE '.git|probe-busybox|build-config|bin'
#     - mkdir ${CENTOS_VERSION}   # create a repo with same structure as prod

#     # get remote repo
#     - /usr/bin/wget -r --no-parent https://${REMOTE_REPO_PATH}/    # TODO replace wget with fetch from vault
#     - mv ${REMOTE_REPO_PATH}/* ${CENTOS_VERSION}/

#     # clean import from remote
#     - rm ${CENTOS_VERSION}/noarch/*

#     # overwrite with new content
#     - cp -rf ${LOCAL_REPO_PATH}/* ${CENTOS_VERSION}/
#     - rm ${CENTOS_VERSION}/repodata/*.asc
#     - cd ${CENTOS_VERSION}/noarch/ && mv ripe-atlas-repo*.noarch.rpm ripe-atlas-repo.noarch.rpm && cd -

#     # create repo
#     - cd ${CENTOS_VERSION} && createrepo . && cd -
#     - find ${CENTOS_VERSION} -type f -name '*.html' -delete
#     - tar cvf ${CENTOS_VERSION}-deployable.tar ./${CENTOS_VERSION}/

#   artifacts:
#     name: "${CENTOS_VERSION}-deployable-with-repodata"
#     paths:
#       - ./*-deployable.tar


# deploy-centos7:
#   stage: deploy
#   dependencies:
#     - build-ci-test-centos7
#   variables:
#     CENTOS_VERSION: centos7
#     REMOTE_REPO_PATH: ftp.ripe.net/ripe/atlas/software-probe/centos7
#     LOCAL_REPO_PATH: ${RPMS_DIR}
#   image: ${DOCKER_IMAGE_CENTOS7}
#   extends: .deploy-ci-centos

# deploy-centos8:
#   stage: deploy
#   dependencies:
#     - build-ci-test-centos8
#   variables:
#     CENTOS_VERSION: centos8
#     REMOTE_REPO_PATH: ftp.ripe.net/ripe/atlas/software-probe/centos8
#     LOCAL_REPO_PATH: ${RPMS_DIR}
#   image: ${DOCKER_IMAGE_CENTOS8}
#   extends: .deploy-ci-centos
